// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: UserCmdTypeProto.proto

package com.proto.command;

public final class UserCmdType {
  private UserCmdType() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  /**
   * Protobuf enum {@code UserCmdInType}
   *
   * <pre>
   * 客户端上行协议 
   * </pre>
   */
  public enum UserCmdInType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>USER_LOGIN = 1;</code>
     *
     * <pre>
     ********************************通用*********************************
     * </pre>
     */
    USER_LOGIN(0, 1),
    /**
     * <code>USER_PING = 2;</code>
     *
     * <pre>
     *Ping协议								PingProtoIn
     * </pre>
     */
    USER_PING(1, 2),
    /**
     * <code>USER_GAME_END = 3;</code>
     *
     * <pre>
     *单机玩法游戏结果                      GameOverProtoIn
     * </pre>
     */
    USER_GAME_END(2, 3),
    /**
     * <code>RANDOMMATCH = 4;</code>
     *
     * <pre>
     *随机玩家                              RandomMatchProtoIn
     * </pre>
     */
    RANDOMMATCH(3, 4),
    /**
     * <code>INVITE_AGAIN = 7;</code>
     *
     * <pre>
     *邀请对方再来一局                          空
     * </pre>
     */
    INVITE_AGAIN(4, 7),
    /**
     * <code>INVITE_AGAIN_BACK = 8;</code>
     *
     * <pre>
     *回应对方的邀请                        InviteBackProtoIn
     * </pre>
     */
    INVITE_AGAIN_BACK(5, 8),
    /**
     * <code>USER_LEADERBOARD = 9;</code>
     *
     * <pre>
     *获取排行榜                            RankInfoProtoIn
     * </pre>
     */
    USER_LEADERBOARD(6, 9),
    /**
     * <code>RECHARGE = 10;</code>
     *
     * <pre>
     *充值                                  RechargeProtoIn
     * </pre>
     */
    RECHARGE(7, 10),
    /**
     * <code>GAME_UNLOCK = 11;</code>
     *
     * <pre>
     *关卡提前解锁                          GameUnlockProtoIn
     * </pre>
     */
    GAME_UNLOCK(8, 11),
    /**
     * <code>DONATE_ITEM = 12;</code>
     *
     * <pre>
     *捐献物品                              DonateItemProtoIn
     * </pre>
     */
    DONATE_ITEM(9, 12),
    /**
     * <code>EXCHANGE_ITEM = 13;</code>
     *
     * <pre>
     *兑换物品                              ExchangeItemProtoIn
     * </pre>
     */
    EXCHANGE_ITEM(10, 13),
    /**
     * <code>MATCHCANCEL = 15;</code>
     *
     * <pre>
     *取消匹配								空
     * </pre>
     */
    MATCHCANCEL(11, 15),
    /**
     * <code>UNLOCKROLE = 16;</code>
     *
     * <pre>
     *解锁角色                              UnlockRoleProtoIn
     * </pre>
     */
    UNLOCKROLE(12, 16),
    /**
     * <code>UNLOCKPLATFORM = 17;</code>
     *
     * <pre>
     *解锁地块主题                          UnlockPlatformProtoIn
     * </pre>
     */
    UNLOCKPLATFORM(13, 17),
    /**
     * <code>REMOVE_AD = 18;</code>
     *
     * <pre>
     *移除广告                              RemoveAdProtoIn
     * </pre>
     */
    REMOVE_AD(14, 18),
    /**
     * <code>CONSUME_ITEM_REVIVE = 19;</code>
     *
     * <pre>
     *消耗物品复活                          ConsumeItemReviveProtoIn
     * </pre>
     */
    CONSUME_ITEM_REVIVE(15, 19),
    /**
     * <code>UNLOCK_COIN_BY_AD = 20;</code>
     *
     * <pre>
     *通过广告解锁金币模式标志位            空
     * </pre>
     */
    UNLOCK_COIN_BY_AD(16, 20),
    /**
     * <code>USER_LEADERBOARD_BASE = 21;</code>
     *
     * <pre>
     *排行版基础信息                        空
     * </pre>
     */
    USER_LEADERBOARD_BASE(17, 21),
    /**
     * <code>SET_HEADID = 22;</code>
     *
     * <pre>
     *设置头像ID                            HeadIDProtoIn
     * </pre>
     */
    SET_HEADID(18, 22),
    /**
     * <code>UNLOCKHEADID = 23;</code>
     *
     * <pre>
     *解锁头像ID							HeadIDProtoIn
     * </pre>
     */
    UNLOCKHEADID(19, 23),
    /**
     * <code>TRIGGER_REWARD_AD = 24;</code>
     *
     * <pre>
     *触发观看奖励广告                      空
     * </pre>
     */
    TRIGGER_REWARD_AD(20, 24),
    /**
     * <code>RECHARGE_VERIFY = 25;</code>
     *
     * <pre>
     *充值验证                              RechargeVerifyProtoIn
     * </pre>
     */
    RECHARGE_VERIFY(21, 25),
    /**
     * <code>BIND_ACCOUNT = 26;</code>
     *
     * <pre>
     *绑定账号                              BindAccountProtoIn
     * </pre>
     */
    BIND_ACCOUNT(22, 26),
    /**
     * <code>CHEAT_ADD_ITEM = 1000;</code>
     *
     * <pre>
     *作弊协议，添加物品                   CheatAddItemProtoIn
     * </pre>
     */
    CHEAT_ADD_ITEM(23, 1000),
    /**
     * <code>LOAD_FINISHI = 10001;</code>
     *
     * <pre>
     *场景加载完毕         					空
     * </pre>
     */
    LOAD_FINISHI(24, 10001),
    /**
     * <code>USER_JUMP = 10003;</code>
     *
     * <pre>
     *上发我方跳动            				PlayerJumpProtoIn
     * </pre>
     */
    USER_JUMP(25, 10003),
    /**
     * <code>USER_KILL = 10005;</code>
     *
     * <pre>
     *上发我方中途死亡     					PlayerBeKillProtoIn
     * </pre>
     */
    USER_KILL(26, 10005),
    /**
     * <code>USER_SURRENDER = 10006;</code>
     *
     * <pre>
     *上发我方投降认输                      空
     * </pre>
     */
    USER_SURRENDER(27, 10006),
    /**
     * <code>EXIT_BOUT = 10010;</code>
     *
     * <pre>
     *退出回合                              空
     * </pre>
     */
    EXIT_BOUT(28, 10010),
    /**
     * <code>GET_ROOM_LIST = 10020;</code>
     *
     * <pre>
     *获取房间列表                          GetRoomListProtoIn
     * </pre>
     */
    GET_ROOM_LIST(29, 10020),
    /**
     * <code>CREATE_ROOM = 10021;</code>
     *
     * <pre>
     *创建房间                              CreateRoomProtoIn
     * </pre>
     */
    CREATE_ROOM(30, 10021),
    /**
     * <code>JOIN_ROOM = 10022;</code>
     *
     * <pre>
     *加入房间                              RoomIDProtoIn
     * </pre>
     */
    JOIN_ROOM(31, 10022),
    /**
     * <code>DISMISS_ROOM = 10023;</code>
     *
     * <pre>
     *解散房间                              空
     * </pre>
     */
    DISMISS_ROOM(32, 10023),
    /**
     * <code>EXIT_ROOM = 10024;</code>
     *
     * <pre>
     *退出房间                              空
     * </pre>
     */
    EXIT_ROOM(33, 10024),
    /**
     * <code>READY_ROOM = 10025;</code>
     *
     * <pre>
     *房员准备                              空
     * </pre>
     */
    READY_ROOM(34, 10025),
    /**
     * <code>START_ROOM = 10026;</code>
     *
     * <pre>
     *房主开始游戏                          空
     * </pre>
     */
    START_ROOM(35, 10026),
    ;

    /**
     * <code>USER_LOGIN = 1;</code>
     *
     * <pre>
     ********************************通用*********************************
     * </pre>
     */
    public static final int USER_LOGIN_VALUE = 1;
    /**
     * <code>USER_PING = 2;</code>
     *
     * <pre>
     *Ping协议								PingProtoIn
     * </pre>
     */
    public static final int USER_PING_VALUE = 2;
    /**
     * <code>USER_GAME_END = 3;</code>
     *
     * <pre>
     *单机玩法游戏结果                      GameOverProtoIn
     * </pre>
     */
    public static final int USER_GAME_END_VALUE = 3;
    /**
     * <code>RANDOMMATCH = 4;</code>
     *
     * <pre>
     *随机玩家                              RandomMatchProtoIn
     * </pre>
     */
    public static final int RANDOMMATCH_VALUE = 4;
    /**
     * <code>INVITE_AGAIN = 7;</code>
     *
     * <pre>
     *邀请对方再来一局                          空
     * </pre>
     */
    public static final int INVITE_AGAIN_VALUE = 7;
    /**
     * <code>INVITE_AGAIN_BACK = 8;</code>
     *
     * <pre>
     *回应对方的邀请                        InviteBackProtoIn
     * </pre>
     */
    public static final int INVITE_AGAIN_BACK_VALUE = 8;
    /**
     * <code>USER_LEADERBOARD = 9;</code>
     *
     * <pre>
     *获取排行榜                            RankInfoProtoIn
     * </pre>
     */
    public static final int USER_LEADERBOARD_VALUE = 9;
    /**
     * <code>RECHARGE = 10;</code>
     *
     * <pre>
     *充值                                  RechargeProtoIn
     * </pre>
     */
    public static final int RECHARGE_VALUE = 10;
    /**
     * <code>GAME_UNLOCK = 11;</code>
     *
     * <pre>
     *关卡提前解锁                          GameUnlockProtoIn
     * </pre>
     */
    public static final int GAME_UNLOCK_VALUE = 11;
    /**
     * <code>DONATE_ITEM = 12;</code>
     *
     * <pre>
     *捐献物品                              DonateItemProtoIn
     * </pre>
     */
    public static final int DONATE_ITEM_VALUE = 12;
    /**
     * <code>EXCHANGE_ITEM = 13;</code>
     *
     * <pre>
     *兑换物品                              ExchangeItemProtoIn
     * </pre>
     */
    public static final int EXCHANGE_ITEM_VALUE = 13;
    /**
     * <code>MATCHCANCEL = 15;</code>
     *
     * <pre>
     *取消匹配								空
     * </pre>
     */
    public static final int MATCHCANCEL_VALUE = 15;
    /**
     * <code>UNLOCKROLE = 16;</code>
     *
     * <pre>
     *解锁角色                              UnlockRoleProtoIn
     * </pre>
     */
    public static final int UNLOCKROLE_VALUE = 16;
    /**
     * <code>UNLOCKPLATFORM = 17;</code>
     *
     * <pre>
     *解锁地块主题                          UnlockPlatformProtoIn
     * </pre>
     */
    public static final int UNLOCKPLATFORM_VALUE = 17;
    /**
     * <code>REMOVE_AD = 18;</code>
     *
     * <pre>
     *移除广告                              RemoveAdProtoIn
     * </pre>
     */
    public static final int REMOVE_AD_VALUE = 18;
    /**
     * <code>CONSUME_ITEM_REVIVE = 19;</code>
     *
     * <pre>
     *消耗物品复活                          ConsumeItemReviveProtoIn
     * </pre>
     */
    public static final int CONSUME_ITEM_REVIVE_VALUE = 19;
    /**
     * <code>UNLOCK_COIN_BY_AD = 20;</code>
     *
     * <pre>
     *通过广告解锁金币模式标志位            空
     * </pre>
     */
    public static final int UNLOCK_COIN_BY_AD_VALUE = 20;
    /**
     * <code>USER_LEADERBOARD_BASE = 21;</code>
     *
     * <pre>
     *排行版基础信息                        空
     * </pre>
     */
    public static final int USER_LEADERBOARD_BASE_VALUE = 21;
    /**
     * <code>SET_HEADID = 22;</code>
     *
     * <pre>
     *设置头像ID                            HeadIDProtoIn
     * </pre>
     */
    public static final int SET_HEADID_VALUE = 22;
    /**
     * <code>UNLOCKHEADID = 23;</code>
     *
     * <pre>
     *解锁头像ID							HeadIDProtoIn
     * </pre>
     */
    public static final int UNLOCKHEADID_VALUE = 23;
    /**
     * <code>TRIGGER_REWARD_AD = 24;</code>
     *
     * <pre>
     *触发观看奖励广告                      空
     * </pre>
     */
    public static final int TRIGGER_REWARD_AD_VALUE = 24;
    /**
     * <code>RECHARGE_VERIFY = 25;</code>
     *
     * <pre>
     *充值验证                              RechargeVerifyProtoIn
     * </pre>
     */
    public static final int RECHARGE_VERIFY_VALUE = 25;
    /**
     * <code>BIND_ACCOUNT = 26;</code>
     *
     * <pre>
     *绑定账号                              BindAccountProtoIn
     * </pre>
     */
    public static final int BIND_ACCOUNT_VALUE = 26;
    /**
     * <code>CHEAT_ADD_ITEM = 1000;</code>
     *
     * <pre>
     *作弊协议，添加物品                   CheatAddItemProtoIn
     * </pre>
     */
    public static final int CHEAT_ADD_ITEM_VALUE = 1000;
    /**
     * <code>LOAD_FINISHI = 10001;</code>
     *
     * <pre>
     *场景加载完毕         					空
     * </pre>
     */
    public static final int LOAD_FINISHI_VALUE = 10001;
    /**
     * <code>USER_JUMP = 10003;</code>
     *
     * <pre>
     *上发我方跳动            				PlayerJumpProtoIn
     * </pre>
     */
    public static final int USER_JUMP_VALUE = 10003;
    /**
     * <code>USER_KILL = 10005;</code>
     *
     * <pre>
     *上发我方中途死亡     					PlayerBeKillProtoIn
     * </pre>
     */
    public static final int USER_KILL_VALUE = 10005;
    /**
     * <code>USER_SURRENDER = 10006;</code>
     *
     * <pre>
     *上发我方投降认输                      空
     * </pre>
     */
    public static final int USER_SURRENDER_VALUE = 10006;
    /**
     * <code>EXIT_BOUT = 10010;</code>
     *
     * <pre>
     *退出回合                              空
     * </pre>
     */
    public static final int EXIT_BOUT_VALUE = 10010;
    /**
     * <code>GET_ROOM_LIST = 10020;</code>
     *
     * <pre>
     *获取房间列表                          GetRoomListProtoIn
     * </pre>
     */
    public static final int GET_ROOM_LIST_VALUE = 10020;
    /**
     * <code>CREATE_ROOM = 10021;</code>
     *
     * <pre>
     *创建房间                              CreateRoomProtoIn
     * </pre>
     */
    public static final int CREATE_ROOM_VALUE = 10021;
    /**
     * <code>JOIN_ROOM = 10022;</code>
     *
     * <pre>
     *加入房间                              RoomIDProtoIn
     * </pre>
     */
    public static final int JOIN_ROOM_VALUE = 10022;
    /**
     * <code>DISMISS_ROOM = 10023;</code>
     *
     * <pre>
     *解散房间                              空
     * </pre>
     */
    public static final int DISMISS_ROOM_VALUE = 10023;
    /**
     * <code>EXIT_ROOM = 10024;</code>
     *
     * <pre>
     *退出房间                              空
     * </pre>
     */
    public static final int EXIT_ROOM_VALUE = 10024;
    /**
     * <code>READY_ROOM = 10025;</code>
     *
     * <pre>
     *房员准备                              空
     * </pre>
     */
    public static final int READY_ROOM_VALUE = 10025;
    /**
     * <code>START_ROOM = 10026;</code>
     *
     * <pre>
     *房主开始游戏                          空
     * </pre>
     */
    public static final int START_ROOM_VALUE = 10026;


    public final int getNumber() { return value; }

    public static UserCmdInType valueOf(int value) {
      switch (value) {
        case 1: return USER_LOGIN;
        case 2: return USER_PING;
        case 3: return USER_GAME_END;
        case 4: return RANDOMMATCH;
        case 7: return INVITE_AGAIN;
        case 8: return INVITE_AGAIN_BACK;
        case 9: return USER_LEADERBOARD;
        case 10: return RECHARGE;
        case 11: return GAME_UNLOCK;
        case 12: return DONATE_ITEM;
        case 13: return EXCHANGE_ITEM;
        case 15: return MATCHCANCEL;
        case 16: return UNLOCKROLE;
        case 17: return UNLOCKPLATFORM;
        case 18: return REMOVE_AD;
        case 19: return CONSUME_ITEM_REVIVE;
        case 20: return UNLOCK_COIN_BY_AD;
        case 21: return USER_LEADERBOARD_BASE;
        case 22: return SET_HEADID;
        case 23: return UNLOCKHEADID;
        case 24: return TRIGGER_REWARD_AD;
        case 25: return RECHARGE_VERIFY;
        case 26: return BIND_ACCOUNT;
        case 1000: return CHEAT_ADD_ITEM;
        case 10001: return LOAD_FINISHI;
        case 10003: return USER_JUMP;
        case 10005: return USER_KILL;
        case 10006: return USER_SURRENDER;
        case 10010: return EXIT_BOUT;
        case 10020: return GET_ROOM_LIST;
        case 10021: return CREATE_ROOM;
        case 10022: return JOIN_ROOM;
        case 10023: return DISMISS_ROOM;
        case 10024: return EXIT_ROOM;
        case 10025: return READY_ROOM;
        case 10026: return START_ROOM;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UserCmdInType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<UserCmdInType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UserCmdInType>() {
            public UserCmdInType findValueByNumber(int number) {
              return UserCmdInType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.proto.command.UserCmdType.getDescriptor().getEnumTypes().get(0);
    }

    private static final UserCmdInType[] VALUES = values();

    public static UserCmdInType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private UserCmdInType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:UserCmdInType)
  }

  /**
   * Protobuf enum {@code UserCmdOutType}
   *
   * <pre>
   * 服务器下行协议 
   * </pre>
   */
  public enum UserCmdOutType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>USER_LOGIN_RESULT = 1;</code>
     *
     * <pre>
     *反馈登录消息开始                    LoginInfoProtoOut
     * </pre>
     */
    USER_LOGIN_RESULT(0, 1),
    /**
     * <code>PING_RESULT = 2;</code>
     *
     * <pre>
     *Ping								  PingProtoOut
     * </pre>
     */
    PING_RESULT(1, 2),
    /**
     * <code>RANDOMMATCH_RESULT = 3;</code>
     *
     * <pre>
     *随机玩家返回                        RandomMatchProtoOut
     * </pre>
     */
    RANDOMMATCH_RESULT(2, 3),
    /**
     * <code>RANDOMMATCH_RESULT_MAP = 4;</code>
     *
     * <pre>
     *随机玩家返回地图信息                MatchMapProtoOut
     * </pre>
     */
    RANDOMMATCH_RESULT_MAP(3, 4),
    /**
     * <code>GET_INVITE_AGAIN = 7;</code>
     *
     * <pre>
     *收到再来一局的邀请                  GetInviteAgainProtoOut
     * </pre>
     */
    GET_INVITE_AGAIN(4, 7),
    /**
     * <code>INVITE_AGAIN_RETURN = 8;</code>
     *
     * <pre>
     *主动邀请的结果                      InviteAgainReturnProtoOut
     * </pre>
     */
    INVITE_AGAIN_RETURN(5, 8),
    /**
     * <code>LEADERBOARD_RETURN = 9;</code>
     *
     * <pre>
     *排行榜数据返回 				      RankInfoListProtoOut
     * </pre>
     */
    LEADERBOARD_RETURN(6, 9),
    /**
     * <code>RECHARGE_RESULT = 10;</code>
     *
     * <pre>
     *充值返回                            RechargeProtoOut
     * </pre>
     */
    RECHARGE_RESULT(7, 10),
    /**
     * <code>KICK_USER = 12;</code>
     *
     * <pre>
     *踢除玩家      				      空协议
     * </pre>
     */
    KICK_USER(8, 12),
    /**
     * <code>UPDATE_RESOURCE = 13;</code>
     *
     * <pre>
     *更新资源							  ResourceRefresh
     * </pre>
     */
    UPDATE_RESOURCE(9, 13),
    /**
     * <code>LEADERBOARD_BASE_RETURN = 14;</code>
     *
     * <pre>
     *排行榜基础信息					  RankBaseInfoListProtoOut
     * </pre>
     */
    LEADERBOARD_BASE_RETURN(10, 14),
    /**
     * <code>UNLOCK_SUCCESS = 15;</code>
     *
     * <pre>
     *主题和角色解锁成功音效              空
     * </pre>
     */
    UNLOCK_SUCCESS(11, 15),
    /**
     * <code>REWARD_AD_RETURN = 16;</code>
     *
     * <pre>
     *奖励广告的数据返回                  RewardADProtoOut
     * </pre>
     */
    REWARD_AD_RETURN(12, 16),
    /**
     * <code>ROOM_RESULT = 17;</code>
     *
     * <pre>
     *房间模式返回玩家信息                RandomMatchProtoOut
     * </pre>
     */
    ROOM_RESULT(13, 17),
    /**
     * <code>ROOM_RESULT_MAP = 18;</code>
     *
     * <pre>
     *房间模式返回地图信息                MatchMapProtoOut
     * </pre>
     */
    ROOM_RESULT_MAP(14, 18),
    /**
     * <code>DONATE_ITEM_RETURN = 19;</code>
     *
     * <pre>
     *捐献物品返回                        DonateItemProtoOut
     * </pre>
     */
    DONATE_ITEM_RETURN(15, 19),
    /**
     * <code>RECHARGE_VERIFY_RETURN = 20;</code>
     *
     * <pre>
     *充值验证回调                        RechargeVerifyProtoOut
     * </pre>
     */
    RECHARGE_VERIFY_RETURN(16, 20),
    /**
     * <code>EXCHANGE_ITEM_RETURN = 21;</code>
     *
     * <pre>
     *兑换物品回调                        ExchangeItemProtoOut
     * </pre>
     */
    EXCHANGE_ITEM_RETURN(17, 21),
    /**
     * <code>REMOVE_AD_RETURN = 22;</code>
     *
     * <pre>
     *购买去广告回调                      RemoveAdProtoOut
     * </pre>
     */
    REMOVE_AD_RETURN(18, 22),
    /**
     * <code>CHANGE_HEADER = 23;</code>
     *
     * <pre>
     *更改头像				ChangeHeaderProtoOut
     * </pre>
     */
    CHANGE_HEADER(19, 23),
    /**
     * <code>ERROR_CODE_RETURN = 1000;</code>
     *
     * <pre>
     *错误码                              ErrorCodeProtoOut
     * </pre>
     */
    ERROR_CODE_RETURN(20, 1000),
    /**
     * <code>START_GAME = 10002;</code>
     *
     * <pre>
     *开始游戏                            空
     * </pre>
     */
    START_GAME(21, 10002),
    /**
     * <code>ENEMY_JUMP = 10004;</code>
     *
     * <pre>
     *下行敌方跳动                     	  EnemyJumpProtoOut
     * </pre>
     */
    ENEMY_JUMP(22, 10004),
    /**
     * <code>ENEMY_KILL = 10006;</code>
     *
     * <pre>
     *下行敌方中途死亡              	  EnemyBeKillProtoOut
     * </pre>
     */
    ENEMY_KILL(23, 10006),
    /**
     * <code>GAME_OVER = 10008;</code>
     *
     * <pre>
     *游戏结果                            GameOverProtoOut
     * </pre>
     */
    GAME_OVER(24, 10008),
    /**
     * <code>EXIT_BOUT_RETURN = 10010;</code>
     *
     * <pre>
     *退出回合                            空
     * </pre>
     */
    EXIT_BOUT_RETURN(25, 10010),
    /**
     * <code>GET_ROOM_LIST_RETURN = 10020;</code>
     *
     * <pre>
     *获取房间列表回调                    RoomListInfoProtoOut
     * </pre>
     */
    GET_ROOM_LIST_RETURN(26, 10020),
    /**
     * <code>CREATE_ROOM_RETURN = 10021;</code>
     *
     * <pre>
     *创建房间回调                        RoomInfoProtoOut
     * </pre>
     */
    CREATE_ROOM_RETURN(27, 10021),
    /**
     * <code>ROOM_PLAYER_INFO_RETURN = 10022;</code>
     *
     * <pre>
     *房间的玩家信息					  RoomPlayerInfoProtoOut
     * </pre>
     */
    ROOM_PLAYER_INFO_RETURN(28, 10022),
    /**
     * <code>DISMISS_ROOM_RETURN = 10023;</code>
     *
     * <pre>
     *解散房间回调                        空
     * </pre>
     */
    DISMISS_ROOM_RETURN(29, 10023),
    /**
     * <code>EXIT_ROOM_RETURN = 10024;</code>
     *
     * <pre>
     *退出房间回调                        空
     * </pre>
     */
    EXIT_ROOM_RETURN(30, 10024),
    /**
     * <code>READY_ROOM_RETURN = 10025;</code>
     *
     * <pre>
     *房员准备状态回调				      RoomerReadyStatusProtoOut
     * </pre>
     */
    READY_ROOM_RETURN(31, 10025),
    ;

    /**
     * <code>USER_LOGIN_RESULT = 1;</code>
     *
     * <pre>
     *反馈登录消息开始                    LoginInfoProtoOut
     * </pre>
     */
    public static final int USER_LOGIN_RESULT_VALUE = 1;
    /**
     * <code>PING_RESULT = 2;</code>
     *
     * <pre>
     *Ping								  PingProtoOut
     * </pre>
     */
    public static final int PING_RESULT_VALUE = 2;
    /**
     * <code>RANDOMMATCH_RESULT = 3;</code>
     *
     * <pre>
     *随机玩家返回                        RandomMatchProtoOut
     * </pre>
     */
    public static final int RANDOMMATCH_RESULT_VALUE = 3;
    /**
     * <code>RANDOMMATCH_RESULT_MAP = 4;</code>
     *
     * <pre>
     *随机玩家返回地图信息                MatchMapProtoOut
     * </pre>
     */
    public static final int RANDOMMATCH_RESULT_MAP_VALUE = 4;
    /**
     * <code>GET_INVITE_AGAIN = 7;</code>
     *
     * <pre>
     *收到再来一局的邀请                  GetInviteAgainProtoOut
     * </pre>
     */
    public static final int GET_INVITE_AGAIN_VALUE = 7;
    /**
     * <code>INVITE_AGAIN_RETURN = 8;</code>
     *
     * <pre>
     *主动邀请的结果                      InviteAgainReturnProtoOut
     * </pre>
     */
    public static final int INVITE_AGAIN_RETURN_VALUE = 8;
    /**
     * <code>LEADERBOARD_RETURN = 9;</code>
     *
     * <pre>
     *排行榜数据返回 				      RankInfoListProtoOut
     * </pre>
     */
    public static final int LEADERBOARD_RETURN_VALUE = 9;
    /**
     * <code>RECHARGE_RESULT = 10;</code>
     *
     * <pre>
     *充值返回                            RechargeProtoOut
     * </pre>
     */
    public static final int RECHARGE_RESULT_VALUE = 10;
    /**
     * <code>KICK_USER = 12;</code>
     *
     * <pre>
     *踢除玩家      				      空协议
     * </pre>
     */
    public static final int KICK_USER_VALUE = 12;
    /**
     * <code>UPDATE_RESOURCE = 13;</code>
     *
     * <pre>
     *更新资源							  ResourceRefresh
     * </pre>
     */
    public static final int UPDATE_RESOURCE_VALUE = 13;
    /**
     * <code>LEADERBOARD_BASE_RETURN = 14;</code>
     *
     * <pre>
     *排行榜基础信息					  RankBaseInfoListProtoOut
     * </pre>
     */
    public static final int LEADERBOARD_BASE_RETURN_VALUE = 14;
    /**
     * <code>UNLOCK_SUCCESS = 15;</code>
     *
     * <pre>
     *主题和角色解锁成功音效              空
     * </pre>
     */
    public static final int UNLOCK_SUCCESS_VALUE = 15;
    /**
     * <code>REWARD_AD_RETURN = 16;</code>
     *
     * <pre>
     *奖励广告的数据返回                  RewardADProtoOut
     * </pre>
     */
    public static final int REWARD_AD_RETURN_VALUE = 16;
    /**
     * <code>ROOM_RESULT = 17;</code>
     *
     * <pre>
     *房间模式返回玩家信息                RandomMatchProtoOut
     * </pre>
     */
    public static final int ROOM_RESULT_VALUE = 17;
    /**
     * <code>ROOM_RESULT_MAP = 18;</code>
     *
     * <pre>
     *房间模式返回地图信息                MatchMapProtoOut
     * </pre>
     */
    public static final int ROOM_RESULT_MAP_VALUE = 18;
    /**
     * <code>DONATE_ITEM_RETURN = 19;</code>
     *
     * <pre>
     *捐献物品返回                        DonateItemProtoOut
     * </pre>
     */
    public static final int DONATE_ITEM_RETURN_VALUE = 19;
    /**
     * <code>RECHARGE_VERIFY_RETURN = 20;</code>
     *
     * <pre>
     *充值验证回调                        RechargeVerifyProtoOut
     * </pre>
     */
    public static final int RECHARGE_VERIFY_RETURN_VALUE = 20;
    /**
     * <code>EXCHANGE_ITEM_RETURN = 21;</code>
     *
     * <pre>
     *兑换物品回调                        ExchangeItemProtoOut
     * </pre>
     */
    public static final int EXCHANGE_ITEM_RETURN_VALUE = 21;
    /**
     * <code>REMOVE_AD_RETURN = 22;</code>
     *
     * <pre>
     *购买去广告回调                      RemoveAdProtoOut
     * </pre>
     */
    public static final int REMOVE_AD_RETURN_VALUE = 22;
    /**
     * <code>CHANGE_HEADER = 23;</code>
     *
     * <pre>
     *更改头像				ChangeHeaderProtoOut
     * </pre>
     */
    public static final int CHANGE_HEADER_VALUE = 23;
    /**
     * <code>ERROR_CODE_RETURN = 1000;</code>
     *
     * <pre>
     *错误码                              ErrorCodeProtoOut
     * </pre>
     */
    public static final int ERROR_CODE_RETURN_VALUE = 1000;
    /**
     * <code>START_GAME = 10002;</code>
     *
     * <pre>
     *开始游戏                            空
     * </pre>
     */
    public static final int START_GAME_VALUE = 10002;
    /**
     * <code>ENEMY_JUMP = 10004;</code>
     *
     * <pre>
     *下行敌方跳动                     	  EnemyJumpProtoOut
     * </pre>
     */
    public static final int ENEMY_JUMP_VALUE = 10004;
    /**
     * <code>ENEMY_KILL = 10006;</code>
     *
     * <pre>
     *下行敌方中途死亡              	  EnemyBeKillProtoOut
     * </pre>
     */
    public static final int ENEMY_KILL_VALUE = 10006;
    /**
     * <code>GAME_OVER = 10008;</code>
     *
     * <pre>
     *游戏结果                            GameOverProtoOut
     * </pre>
     */
    public static final int GAME_OVER_VALUE = 10008;
    /**
     * <code>EXIT_BOUT_RETURN = 10010;</code>
     *
     * <pre>
     *退出回合                            空
     * </pre>
     */
    public static final int EXIT_BOUT_RETURN_VALUE = 10010;
    /**
     * <code>GET_ROOM_LIST_RETURN = 10020;</code>
     *
     * <pre>
     *获取房间列表回调                    RoomListInfoProtoOut
     * </pre>
     */
    public static final int GET_ROOM_LIST_RETURN_VALUE = 10020;
    /**
     * <code>CREATE_ROOM_RETURN = 10021;</code>
     *
     * <pre>
     *创建房间回调                        RoomInfoProtoOut
     * </pre>
     */
    public static final int CREATE_ROOM_RETURN_VALUE = 10021;
    /**
     * <code>ROOM_PLAYER_INFO_RETURN = 10022;</code>
     *
     * <pre>
     *房间的玩家信息					  RoomPlayerInfoProtoOut
     * </pre>
     */
    public static final int ROOM_PLAYER_INFO_RETURN_VALUE = 10022;
    /**
     * <code>DISMISS_ROOM_RETURN = 10023;</code>
     *
     * <pre>
     *解散房间回调                        空
     * </pre>
     */
    public static final int DISMISS_ROOM_RETURN_VALUE = 10023;
    /**
     * <code>EXIT_ROOM_RETURN = 10024;</code>
     *
     * <pre>
     *退出房间回调                        空
     * </pre>
     */
    public static final int EXIT_ROOM_RETURN_VALUE = 10024;
    /**
     * <code>READY_ROOM_RETURN = 10025;</code>
     *
     * <pre>
     *房员准备状态回调				      RoomerReadyStatusProtoOut
     * </pre>
     */
    public static final int READY_ROOM_RETURN_VALUE = 10025;


    public final int getNumber() { return value; }

    public static UserCmdOutType valueOf(int value) {
      switch (value) {
        case 1: return USER_LOGIN_RESULT;
        case 2: return PING_RESULT;
        case 3: return RANDOMMATCH_RESULT;
        case 4: return RANDOMMATCH_RESULT_MAP;
        case 7: return GET_INVITE_AGAIN;
        case 8: return INVITE_AGAIN_RETURN;
        case 9: return LEADERBOARD_RETURN;
        case 10: return RECHARGE_RESULT;
        case 12: return KICK_USER;
        case 13: return UPDATE_RESOURCE;
        case 14: return LEADERBOARD_BASE_RETURN;
        case 15: return UNLOCK_SUCCESS;
        case 16: return REWARD_AD_RETURN;
        case 17: return ROOM_RESULT;
        case 18: return ROOM_RESULT_MAP;
        case 19: return DONATE_ITEM_RETURN;
        case 20: return RECHARGE_VERIFY_RETURN;
        case 21: return EXCHANGE_ITEM_RETURN;
        case 22: return REMOVE_AD_RETURN;
        case 23: return CHANGE_HEADER;
        case 1000: return ERROR_CODE_RETURN;
        case 10002: return START_GAME;
        case 10004: return ENEMY_JUMP;
        case 10006: return ENEMY_KILL;
        case 10008: return GAME_OVER;
        case 10010: return EXIT_BOUT_RETURN;
        case 10020: return GET_ROOM_LIST_RETURN;
        case 10021: return CREATE_ROOM_RETURN;
        case 10022: return ROOM_PLAYER_INFO_RETURN;
        case 10023: return DISMISS_ROOM_RETURN;
        case 10024: return EXIT_ROOM_RETURN;
        case 10025: return READY_ROOM_RETURN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<UserCmdOutType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<UserCmdOutType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<UserCmdOutType>() {
            public UserCmdOutType findValueByNumber(int number) {
              return UserCmdOutType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.proto.command.UserCmdType.getDescriptor().getEnumTypes().get(1);
    }

    private static final UserCmdOutType[] VALUES = values();

    public static UserCmdOutType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private UserCmdOutType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:UserCmdOutType)
  }

  /**
   * Protobuf enum {@code GameCmdType}
   *
   * <pre>
   * 游戏内协议  -- 游戏二级协议(10000 - 20000) 
   * </pre>
   */
  public enum GameCmdType
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <code>TWO_MIN = 10000;</code>
     *
     * <pre>
     *二级协议起始命令
     * </pre>
     */
    TWO_MIN(0, 10000),
    /**
     * <code>TWO_MAX = 20000;</code>
     *
     * <pre>
     *二级协议最大值
     * </pre>
     */
    TWO_MAX(1, 20000),
    ;

    /**
     * <code>TWO_MIN = 10000;</code>
     *
     * <pre>
     *二级协议起始命令
     * </pre>
     */
    public static final int TWO_MIN_VALUE = 10000;
    /**
     * <code>TWO_MAX = 20000;</code>
     *
     * <pre>
     *二级协议最大值
     * </pre>
     */
    public static final int TWO_MAX_VALUE = 20000;


    public final int getNumber() { return value; }

    public static GameCmdType valueOf(int value) {
      switch (value) {
        case 10000: return TWO_MIN;
        case 20000: return TWO_MAX;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<GameCmdType>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static com.google.protobuf.Internal.EnumLiteMap<GameCmdType>
        internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<GameCmdType>() {
            public GameCmdType findValueByNumber(int number) {
              return GameCmdType.valueOf(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(index);
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.proto.command.UserCmdType.getDescriptor().getEnumTypes().get(2);
    }

    private static final GameCmdType[] VALUES = values();

    public static GameCmdType valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      return VALUES[desc.getIndex()];
    }

    private final int index;
    private final int value;

    private GameCmdType(int index, int value) {
      this.index = index;
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:GameCmdType)
  }


  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026UserCmdTypeProto.proto*\253\005\n\rUserCmdInTy" +
      "pe\022\016\n\nUSER_LOGIN\020\001\022\r\n\tUSER_PING\020\002\022\021\n\rUSE" +
      "R_GAME_END\020\003\022\017\n\013RANDOMMATCH\020\004\022\020\n\014INVITE_" +
      "AGAIN\020\007\022\025\n\021INVITE_AGAIN_BACK\020\010\022\024\n\020USER_L" +
      "EADERBOARD\020\t\022\014\n\010RECHARGE\020\n\022\017\n\013GAME_UNLOC" +
      "K\020\013\022\017\n\013DONATE_ITEM\020\014\022\021\n\rEXCHANGE_ITEM\020\r\022" +
      "\017\n\013MATCHCANCEL\020\017\022\016\n\nUNLOCKROLE\020\020\022\022\n\016UNLO" +
      "CKPLATFORM\020\021\022\r\n\tREMOVE_AD\020\022\022\027\n\023CONSUME_I" +
      "TEM_REVIVE\020\023\022\025\n\021UNLOCK_COIN_BY_AD\020\024\022\031\n\025U" +
      "SER_LEADERBOARD_BASE\020\025\022\016\n\nSET_HEADID\020\026\022\020",
      "\n\014UNLOCKHEADID\020\027\022\025\n\021TRIGGER_REWARD_AD\020\030\022" +
      "\023\n\017RECHARGE_VERIFY\020\031\022\020\n\014BIND_ACCOUNT\020\032\022\023" +
      "\n\016CHEAT_ADD_ITEM\020\350\007\022\021\n\014LOAD_FINISHI\020\221N\022\016" +
      "\n\tUSER_JUMP\020\223N\022\016\n\tUSER_KILL\020\225N\022\023\n\016USER_S" +
      "URRENDER\020\226N\022\016\n\tEXIT_BOUT\020\232N\022\022\n\rGET_ROOM_" +
      "LIST\020\244N\022\020\n\013CREATE_ROOM\020\245N\022\016\n\tJOIN_ROOM\020\246" +
      "N\022\021\n\014DISMISS_ROOM\020\247N\022\016\n\tEXIT_ROOM\020\250N\022\017\n\n" +
      "READY_ROOM\020\251N\022\017\n\nSTART_ROOM\020\252N*\335\005\n\016UserC" +
      "mdOutType\022\025\n\021USER_LOGIN_RESULT\020\001\022\017\n\013PING" +
      "_RESULT\020\002\022\026\n\022RANDOMMATCH_RESULT\020\003\022\032\n\026RAN",
      "DOMMATCH_RESULT_MAP\020\004\022\024\n\020GET_INVITE_AGAI" +
      "N\020\007\022\027\n\023INVITE_AGAIN_RETURN\020\010\022\026\n\022LEADERBO" +
      "ARD_RETURN\020\t\022\023\n\017RECHARGE_RESULT\020\n\022\r\n\tKIC" +
      "K_USER\020\014\022\023\n\017UPDATE_RESOURCE\020\r\022\033\n\027LEADERB" +
      "OARD_BASE_RETURN\020\016\022\022\n\016UNLOCK_SUCCESS\020\017\022\024" +
      "\n\020REWARD_AD_RETURN\020\020\022\017\n\013ROOM_RESULT\020\021\022\023\n" +
      "\017ROOM_RESULT_MAP\020\022\022\026\n\022DONATE_ITEM_RETURN" +
      "\020\023\022\032\n\026RECHARGE_VERIFY_RETURN\020\024\022\030\n\024EXCHAN" +
      "GE_ITEM_RETURN\020\025\022\024\n\020REMOVE_AD_RETURN\020\026\022\021" +
      "\n\rCHANGE_HEADER\020\027\022\026\n\021ERROR_CODE_RETURN\020\350",
      "\007\022\017\n\nSTART_GAME\020\222N\022\017\n\nENEMY_JUMP\020\224N\022\017\n\nE" +
      "NEMY_KILL\020\226N\022\016\n\tGAME_OVER\020\230N\022\025\n\020EXIT_BOU" +
      "T_RETURN\020\232N\022\031\n\024GET_ROOM_LIST_RETURN\020\244N\022\027" +
      "\n\022CREATE_ROOM_RETURN\020\245N\022\034\n\027ROOM_PLAYER_I" +
      "NFO_RETURN\020\246N\022\030\n\023DISMISS_ROOM_RETURN\020\247N\022" +
      "\025\n\020EXIT_ROOM_RETURN\020\250N\022\026\n\021READY_ROOM_RET" +
      "URN\020\251N**\n\013GameCmdType\022\014\n\007TWO_MIN\020\220N\022\r\n\007T" +
      "WO_MAX\020\240\234\001B \n\021com.proto.commandB\013UserCmd" +
      "Type"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
      new com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner() {
        public com.google.protobuf.ExtensionRegistry assignDescriptors(
            com.google.protobuf.Descriptors.FileDescriptor root) {
          descriptor = root;
          return null;
        }
      };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
  }

  // @@protoc_insertion_point(outer_class_scope)
}
