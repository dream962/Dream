package com.game.user.cmd.world;

import java.util.List;

import com.base.command.ICode;
import com.base.net.CommonMessage;
import com.base.net.client.IClientConnection;
import com.game.object.player.GamePlayer;
import com.game.user.cmd.AbstractUserCmd;
import com.google.protobuf.InvalidProtocolBufferException;
import com.proto.command.UserCmdType.UserCmdInType;
import com.proto.command.UserCmdType.UserCmdOutType;
import com.proto.login.gen.UserLoginMsg.UserPingProto;
import com.util.print.PrintFactory;

@ICode(code = UserCmdInType.USER_PING_VALUE)
public class PingCmd extends AbstractUserCmd
{
    @Override
    public void execute(GamePlayer player, CommonMessage packet)
    {
        try
        {
            UserPingProto proto = UserPingProto.parseFrom(packet.getBody());
            List<Integer> str = proto.getDataList();
            PrintFactory.error("server received data len:%s", str.size());

             packet.setCode((short) UserCmdOutType.PING_VALUE);
             player.sendMessage(packet);
        }
        catch (InvalidProtocolBufferException e)
        {
            e.printStackTrace();
        }
    }

    public void executeConnect(IClientConnection conn, CommonMessage packet)
    {
        try
        {
            UserPingProto proto = UserPingProto.parseFrom(packet.getBody());
            List<Integer> str = proto.getDataList();
            PrintFactory.error("server received data len:%s", str.size());
        }
        catch (InvalidProtocolBufferException e)
        {
            e.printStackTrace();
        }
    }
}
