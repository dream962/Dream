
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<script type="application/javascript" src="protobuf.min.js"></script>
<script type="text/javascript">
	var socket;
	if (!window.WebSocket) {
		window.WebSocket = window.MozWebSocket;
	}

	if (window.WebSocket) {
		socket = new WebSocket("ws://localhost:7397");
		socket.binaryType = 'arraybuffer';

		socket.onmessage = function(event) {
			onMessage(event);
		};

		socket.onopen = function(event) {
			var ta = document.getElementById('responseText');
			ta.value = "打开WebSoket 服务正常，浏览器支持WebSoket!" + "\r\n";
		};

		socket.onclose = function(event) {
			var ta = document.getElementById('responseText');
			ta.value = "";
			ta.value = "WebSocket 关闭" + "\r\n";
		};
	} else {
		alert("您的浏览器不支持WebSocket协议！");
	}

	function onMessage(evt) {
		var buf = new Uint8Array(evt.data);
		var ta = document.getElementById('responseText');
		ta.value += TestProto.decode(buf).userName + "\r\n";
	}

	function send(message) {
		if (!window.WebSocket) {
			return;
		}
		if (socket.readyState == WebSocket.OPEN) {
			socket.send(message);
		} else {
			alert("WebSocket 连接没有建立成功！");
		}
	}

	// 封装协议数据
	var TestProto;
	protobuf.load("TestProto.proto", function(err, root) {
		if (err) {
			alert("proto error:" + err);
		}

		TestProto = root.lookup("js.TestProto");
	});

	function sendProto(message) {
		var wsmessage = TestProto.create({
			userName : "dream",
			data : 1234,
			sex : true,
			rate : 1.3,
			time : new Date().getTime()
		});
		var testProto = TestProto.encode(wsmessage).finish();

		send(testProto);
	}

	function sendMessage(message) {

		var buffer = new ArrayBuffer(100000);
		var int32View = new Int8Array(buffer);

		for (var i = 0; i < int32View.length; i++) {
			int32View[i] = i * 2;
		}

		for (var i = 0; i < 5; i++) {
			send(buffer);
		}
	}
	
	
	function Person(name){
        this.name=name;
    }
    Person.prototype.share=[];
    Person.prototype.printName=function(){
        alert(this.name);
    }

    var person1=new Person('Byron');
    var person2=new Person('Frank');

    person1.share.push(1);
    person2.share.push(2);
    console.log(person2.share); //[1,2]
	
	
	
	
	
	
	
</script>
<title>web socket</title>
</head>

<body>
	<form onSubmit="return false;">
		<input type="text" name="message" value="Netty The Sinper" /> <br />
		<br /> <input type="button" value="发送 WebSocket 请求消息"
			onClick="sendMessage(this.form.message.value)" />
		<hr color="blue" />
		<h3>服务端返回的应答消息</h3>
		<textarea id="responseText" style="width: 1024px; height: 300px;"></textarea>
	</form>
</body>
</html>
