package com.logic.map;

/**
 * @author dream
 *
 */
public class PathANode
{
    /** 总的移动量*/
    public float f;
    /** 从起始点到当前node的移动量*/
    public float g;
    /** 从当前node到终点的估算值*/
    public float h;
    /** 是否可行*/
    public boolean walkable = true;
    /** 地图节点*/
    public MapNode node;
    
    public PathANode parent;
    
    public float costMultiplier = 1.0f;//当前节点的花费，默认都为1
    
    /** 屏幕坐标系中的x坐标 */
    public int posX;
    /** 屏幕坐标系中的y坐标 */
    public int posY;
    
    /** 埋葬深度 */
    public int buriedDepth = -1;
    
    /** 距离 */
    public int distance;
    
    public PathANode(MapNode)
    {
        this.x = x;
        this.y = y;
    }

    /** 得到此节点到另一节点的网格距离 */
    public int getDistanceTo(PathANode targetNode)
    {
        int disX = targetNode.x - x;
        int disY = targetNode.y - y;
        distance = (int) Math.sqrt( disX * disX + disY * disY );
        return distance;
    }
}
